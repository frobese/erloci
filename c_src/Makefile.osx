EXE_TARGET = ocierl
LIB_TARGET = liberloci.a

ifeq "$(wildcard c_src)" ""
	SRC_PATH_PREFIX = 
	PRIV_DIR = ../priv
else
	SRC_PATH_PREFIX = c_src/
	PRIV_DIR = priv
endif

MKDIR_P = mkdir -p
ERLOCI_PATH = $(SRC_PATH_PREFIX)erloci_drv
ERLOCI_LIB_PATH = $(SRC_PATH_PREFIX)erloci_lib
OCI_INCLUDE_PATH = $(realpath $(INSTANT_CLIENT_INCLUDE_PATH))
OCI_LIB_PATH = $(realpath $(INSTANT_CLIENT_LIB_PATH))

INSTANT_CLIENT_LIB=$(shell find {.,..,../..}{,/../../..} -name libocci\.\* -print -quit)
INSTANT_CLIENT_LIB_PATH := $(dir $(INSTANT_CLIENT_LIB))
INSTANT_CLIENT_INCLUDE_PATH := $(INSTANT_CLIENT_LIB_PATH)/sdk/include

ERLOCI_LIB_HDRS = $(wildcard $(addprefix $(ERLOCI_LIB_PATH)/, *.h))
ERLOCI_LIB_SRCS = $(wildcard $(addprefix $(ERLOCI_LIB_PATH)/, *.cpp))
ERLOCI_LIB_OBJS = $(ERLOCI_LIB_SRCS:.cpp=.o)

ERLOCI_HDRS = $(wildcard $(addprefix $(ERLOCI_PATH)/, *.h))
ERLOCI_SRCS = $(wildcard $(addprefix $(ERLOCI_PATH)/, *.cpp))
ERLOCI_OBJS = $(ERLOCI_SRCS:.cpp=.o)

ERL_BIN := $(shell command -v erl 2> /dev/null)
ERL_BIN_DIR := $(dir $(ERL_BIN))
ERL_INTERFACE_DIR ?= $(realpath $(ERL_BIN_DIR)../../usr)

ifeq "$(LIBEVENT_INCLUDE_PATH)" ""
	ifeq "$(shell command -v pkg-config 2> /dev/null)" ""
		LIBEVENT_CFLAGS = 
	else
		LIBEVENT_CFLAGS = $(shell pkg-config libevent --cflags-only-I --silence-errors)
	endif
else
	LIBEVENT_CFLAGS = -I$(LIBEVENT_INCLUDE_PATH)
endif
ifeq "$(LIBEVENT_LIB_PATH)" ""
	ifeq "$(shell command -v pkg-config 2> /dev/null)" ""
		LIBEVENT_LDFLAGS = 
	else
		LIBEVENT_LDFLAGS = $(shell pkg-config libevent --libs-only-L --silence-errors)
	endif
else
	LIBEVENT_LDFLAGS = -L$(LIBEVENT_LIB_PATH)
endif

CXXFLAGS = -ggdb -Wall -I$(ERL_INTERFACE_DIR)/include  -I$(ERLOCI_PATH) -I$(ERLOCI_LIB_PATH) -I$(OCI_INCLUDE_PATH) $(LIBEVENT_CFLAGS)
LINKDIRS = -L$(ERL_INTERFACE_DIR)/lib -L$(PRIV_DIR) -L$(OCI_LIB_PATH) $(LIBEVENT_LDFLAGS)
#LINKFLAGS = -levent -lpthread -lerl_interface -lei -lerloci -locci -lons -lclntshcore -lclntsh -lnnz12 -lipc1 -lmql1
LINKFLAGS = -levent -lpthread -lerl_interface -lei -lerloci -locci -lclntsh -lnnz12

all: $(PRIV_DIR) $(PRIV_DIR)/$(EXE_TARGET)
	@echo "erloci compiled!!!"

$(PRIV_DIR):
	$(MKDIR_P) $(PRIV_DIR)

$(PRIV_DIR)/$(EXE_TARGET): $(PRIV_DIR)/$(LIB_TARGET) $(ERLOCI_OBJS)
	g++ -Wall $(LINKDIRS) $^ $(LINKFLAGS) -o $@

$(PRIV_DIR)/$(LIB_TARGET): $(ERLOCI_LIB_OBJS)
	ar rcs $(PRIV_DIR)/$(LIB_TARGET) $(ERLOCI_LIB_OBJS)

$(ERLOCI_LIB_SRCS): $(ERLOCI_LIB_HDRS)
	touch $(ERLOCI_LIB_SRCS)

$(ERLOCI_SRCS): $(ERLOCI_HDRS) $(ERLOCI_LIB_HDRS)
	touch $(ERLOCI_LIB_SRCS)
	touch $(ERLOCI_SRCS)

clean:
	rm -rf $(ERLOCI_OBJS)
	rm -rf $(ERLOCI_LIB_OBJS)
	rm -rf $(PRIV_DIR)/$(LIB_TARGET)
	rm -rf $(PRIV_DIR)/$(EXE_TARGET)
